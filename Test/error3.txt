const int _ = -0;
const int __=+0;
const int _2 = 2, _PoS_3 = 3, neg5_ = -5;
const char add = '+', sub = '-', mul = '*', _div = '/';
const int MAX_FIBO = 100;

int N, n;
int fibo[100], num[100];

void init_fibo(int a)
{
    int i;
    i = 0;
    while (i < MAX_FIBO/2+1) {
        fibo[i] = 0;
        fibo[MAX_FIBO-1-i] = 0;
        i = i + 1;
    }
    return (1);
}

int fibonacci()
{
    switch (n) {
        case 0: return (0);
        case 1: return (1);
        default: {
            if (fibo[n] == 0)
                fibo[n] = fibonacci(n - 1) + fibonacci(n - 2);
            return (fibo[n]);
        }
    }
}

int factorial(char n)
{
    if (n == 0)
        return (1);
    return (n * factorial(n - 1));
}


void swap(int i, int j)
{
    int tmp;
    tmp = num[i];
    num[i] = num[j];
    num[j] = tmp;
    return;
}

void sort(int left, int right)
{
    int i, j;
    if (left >= right) {
        return;
    }
    i = left;
    j = left + 1;
    while (j <= right) {
        if (num[j] < num[left]) {
            i = i + 1;
            swap(i, j);
        }
        j = j + 1;
    }
    swap(left, i);
    sort(left, i - 1);
    sort(i + 1, right);
}


void main()
{
    int i, tmp;
    int fibo;
    fibo = factorial(5)+(factorial(5)+(factorial(5)+factorial(5)+(factorial(5)+(factorial(5)+(factorial(5)+(factorial(5)+(factorial(5)+(factorial(5)+(factorial(5)+factorial(5))))))))));
    printf("f: ", fibo);

    i = init_fibo();
    printf("fibonacci 5 is ", fibonacci(5));

    printf("Test sort:");
    printf("Please input 10 numbers:");
    i = 0;
    while (i < 10) {
        num[i] = 5-i;
        i = i + 1;
    }
    sort(0, 9);
    printf("sort result:");
    i = 0;
    while (i < 10) {
        printf(num[i]);
        i = i + 1;
    };

    return;
}